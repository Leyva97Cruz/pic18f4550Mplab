

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 19 02:47:49 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  000186                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for _display
    58  000186  003F               	dw	63
    59  000188  0006               	dw	6
    60  00018A  005B               	dw	91
    61  00018C  004F               	dw	79
    62  00018E  0066               	dw	102
    63  000190  006D               	dw	109
    64  000192  007D               	dw	125
    65  000194  0007               	dw	7
    66  000196  007F               	dw	127
    67  000198  0067               	dw	103
    68                           
    69                           ;initializer for _DATTMR0
    70  00019A  FCF2               	dw	64754
    71                           
    72                           ;initializer for _Mdecenas
    73  00019C  05                 	db	5
    74                           
    75                           ;initializer for _Sdecenas
    76  00019D  05                 	db	5
    77                           
    78                           ;initializer for _Munidades
    79  00019E  09                 	db	9
    80                           
    81                           ;initializer for _Sunidades
    82  00019F  09                 	db	9
    83  0000                     _TMR0L	set	4054
    84  0000                     _TMR0H	set	4055
    85  0000                     _T0CONbits	set	4053
    86  0000                     _INTCONbits	set	4082
    87  0000                     _LATD	set	3980
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISD	set	3989
    90  0000                     _ADCON1bits	set	4033
    91  0000                     _LATB	set	3978
    92  0000                     _LATDbits	set	3980
    93                           
    94                           ; #config settings
    95  0000                     
    96                           	psect	cinit
    97  00013C                     __pcinit:
    98                           	opt callstack 0
    99  00013C                     start_initialization:
   100                           	opt callstack 0
   101  00013C                     __initialization:
   102                           	opt callstack 0
   103                           
   104                           ; Initialize objects allocated to COMRAM (26 bytes)
   105                           ; load TBLPTR registers with __pidataCOMRAM
   106  00013C  0E86               	movlw	low __pidataCOMRAM
   107  00013E  6EF6               	movwf	tblptrl,c
   108  000140  0E01               	movlw	high __pidataCOMRAM
   109  000142  6EF7               	movwf	tblptrh,c
   110  000144  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   111  000146  6EF8               	movwf	tblptru,c
   112  000148  EE00  F001         	lfsr	0,__pdataCOMRAM
   113  00014C  EE10 F01A          	lfsr	1,26
   114  000150                     copy_data0:
   115  000150  0009               	tblrd		*+
   116  000152  CFF5 FFEE          	movff	tablat,postinc0
   117  000156  50E5               	movf	postdec1,w,c
   118  000158  50E1               	movf	fsr1l,w,c
   119  00015A  E1FA               	bnz	copy_data0
   120  00015C                     end_of_initialization:
   121                           	opt callstack 0
   122  00015C                     __end_of__initialization:
   123                           	opt callstack 0
   124  00015C  901F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   125  00015E  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   126  000160  0100               	movlb	0
   127  000162  EF09  F000         	goto	_main	;jump to C main() function
   128                           
   129                           	psect	dataCOMRAM
   130  000001                     __pdataCOMRAM:
   131                           	opt callstack 0
   132  000001                     _display:
   133                           	opt callstack 0
   134  000001                     	ds	20
   135  000015                     _DATTMR0:
   136                           	opt callstack 0
   137  000015                     	ds	2
   138  000017                     _Mdecenas:
   139                           	opt callstack 0
   140  000017                     	ds	1
   141  000018                     _Sdecenas:
   142                           	opt callstack 0
   143  000018                     	ds	1
   144  000019                     _Munidades:
   145                           	opt callstack 0
   146  000019                     	ds	1
   147  00001A                     _Sunidades:
   148                           	opt callstack 0
   149  00001A                     	ds	1
   150                           
   151                           	psect	cstackCOMRAM
   152  00001B                     __pcstackCOMRAM:
   153                           	opt callstack 0
   154  00001B                     ??_Timer0:
   155                           
   156                           ; 1 bytes @ 0x0
   157  00001B                     	ds	4
   158  00001F                     
   159                           ; 1 bytes @ 0x4
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 34 in file "Timer0.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   179 ;;      Params:         0       0       0       0       0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0       0       0
   181 ;;      Temps:          0       0       0       0       0       0       0       0       0
   182 ;;      Totals:         0       0       0       0       0       0       0       0       0
   183 ;;Total ram usage:        0 bytes
   184 ;; Hardware stack levels required when called:    2
   185 ;; This function calls:
   186 ;;		_Init
   187 ;;		_InitTMR0
   188 ;; This function is called by:
   189 ;;		Startup code after reset
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text0
   194  000012                     __ptext0:
   195                           	opt callstack 0
   196  000012                     _main:
   197                           	opt callstack 29
   198  000012                     
   199                           ;Timer0.c: 36:     Init();
   200  000012  ECD0  F000         	call	_Init	;wreg free
   201                           
   202                           ;Timer0.c: 37:     InitTMR0();
   203  000016  ECB3  F000         	call	_InitTMR0	;wreg free
   204  00001A                     l761:
   205                           
   206                           ;Timer0.c: 43:         if (Sunidades == 10) {
   207  00001A  0E0A               	movlw	10
   208  00001C  181A               	xorwf	_Sunidades^0,w,c
   209  00001E  A4D8               	btfss	status,2,c
   210  000020  EF14  F000         	goto	u11
   211  000024  EF16  F000         	goto	u10
   212  000028                     u11:
   213  000028  EF0D  F000         	goto	l761
   214  00002C                     u10:
   215  00002C                     
   216                           ;Timer0.c: 44:             Sunidades = 0;
   217  00002C  0E00               	movlw	0
   218  00002E  6E1A               	movwf	_Sunidades^0,c
   219  000030                     
   220                           ;Timer0.c: 45:             if (Sdecenas == 5) {
   221  000030  0E05               	movlw	5
   222  000032  1818               	xorwf	_Sdecenas^0,w,c
   223  000034  A4D8               	btfss	status,2,c
   224  000036  EF1F  F000         	goto	u21
   225  00003A  EF21  F000         	goto	u20
   226  00003E                     u21:
   227  00003E  EF5D  F000         	goto	l801
   228  000042                     u20:
   229  000042                     
   230                           ;Timer0.c: 46:                 Sdecenas = 0;
   231  000042  0E00               	movlw	0
   232  000044  6E18               	movwf	_Sdecenas^0,c
   233  000046                     
   234                           ;Timer0.c: 47:                 if (Munidades == 9) {
   235  000046  0E09               	movlw	9
   236  000048  1819               	xorwf	_Munidades^0,w,c
   237  00004A  A4D8               	btfss	status,2,c
   238  00004C  EF2A  F000         	goto	u31
   239  000050  EF2C  F000         	goto	u30
   240  000054                     u31:
   241  000054  EF4C  F000         	goto	l789
   242  000058                     u30:
   243  000058                     
   244                           ;Timer0.c: 48:                     Munidades = 0;
   245  000058  0E00               	movlw	0
   246  00005A  6E19               	movwf	_Munidades^0,c
   247  00005C                     
   248                           ;Timer0.c: 49:                     if (Mdecenas == 5) {
   249  00005C  0E05               	movlw	5
   250  00005E  1817               	xorwf	_Mdecenas^0,w,c
   251  000060  A4D8               	btfss	status,2,c
   252  000062  EF35  F000         	goto	u41
   253  000066  EF37  F000         	goto	u40
   254  00006A                     u41:
   255  00006A  EF3B  F000         	goto	l777
   256  00006E                     u40:
   257  00006E                     
   258                           ;Timer0.c: 50:                         Mdecenas = 0;
   259  00006E  0E00               	movlw	0
   260  000070  6E17               	movwf	_Mdecenas^0,c
   261                           
   262                           ;Timer0.c: 51:                     } else {
   263  000072  EF0D  F000         	goto	l761
   264  000076                     l777:
   265                           
   266                           ;Timer0.c: 52:                         Mdecenas++;
   267  000076  2A17               	incf	_Mdecenas^0,f,c
   268  000078                     
   269                           ;Timer0.c: 53:                         LATDbits.LD0 = 0;
   270  000078  908C               	bcf	140,0,c	;volatile
   271  00007A                     
   272                           ;Timer0.c: 54:                         LATDbits.LD3 = 1;
   273  00007A  868C               	bsf	140,3,c	;volatile
   274  00007C                     
   275                           ;Timer0.c: 55:                         LATDbits.LD1 = 1;
   276  00007C  828C               	bsf	140,1,c	;volatile
   277  00007E                     
   278                           ;Timer0.c: 56:                         LATDbits.LD2 = 1;
   279  00007E  848C               	bsf	140,2,c	;volatile
   280  000080                     
   281                           ;Timer0.c: 57:                         LATB = display[Mdecenas];
   282  000080  5017               	movf	_Mdecenas^0,w,c
   283  000082  0D02               	mullw	2
   284  000084  0E01               	movlw	low _display
   285  000086  24F3               	addwf	243,w,c
   286  000088  6ED9               	movwf	fsr2l,c
   287  00008A  0E00               	movlw	high _display
   288  00008C  20F4               	addwfc	prodh,w,c
   289  00008E  6EDA               	movwf	fsr2h,c
   290  000090  50DF               	movf	indf2,w,c
   291  000092  6E8A               	movwf	138,c	;volatile
   292  000094  EF0D  F000         	goto	l761
   293  000098                     l789:
   294                           
   295                           ;Timer0.c: 60:                     Munidades++;
   296  000098  2A19               	incf	_Munidades^0,f,c
   297  00009A                     
   298                           ;Timer0.c: 62:                     LATDbits.LD3 = 1;
   299  00009A  868C               	bsf	140,3,c	;volatile
   300  00009C                     
   301                           ;Timer0.c: 63:                     LATDbits.LD0 = 1;
   302  00009C  808C               	bsf	140,0,c	;volatile
   303  00009E                     
   304                           ;Timer0.c: 64:                     LATDbits.LD1 = 0;
   305  00009E  928C               	bcf	140,1,c	;volatile
   306  0000A0                     
   307                           ;Timer0.c: 65:                     LATDbits.LD2 = 1;
   308  0000A0  848C               	bsf	140,2,c	;volatile
   309  0000A2                     
   310                           ;Timer0.c: 66:                     LATB = display[Munidades];
   311  0000A2  5019               	movf	_Munidades^0,w,c
   312  0000A4  0D02               	mullw	2
   313  0000A6  0E01               	movlw	low _display
   314  0000A8  24F3               	addwf	243,w,c
   315  0000AA  6ED9               	movwf	fsr2l,c
   316  0000AC  0E00               	movlw	high _display
   317  0000AE  20F4               	addwfc	prodh,w,c
   318  0000B0  6EDA               	movwf	fsr2h,c
   319  0000B2  50DF               	movf	indf2,w,c
   320  0000B4  6E8A               	movwf	138,c	;volatile
   321  0000B6  EF0D  F000         	goto	l761
   322  0000BA                     l801:
   323                           
   324                           ;Timer0.c: 69:                 Sdecenas++;
   325  0000BA  2A18               	incf	_Sdecenas^0,f,c
   326  0000BC                     
   327                           ;Timer0.c: 70:                 LATDbits.LD2 = 0;
   328  0000BC  948C               	bcf	140,2,c	;volatile
   329  0000BE                     
   330                           ;Timer0.c: 71:                 LATDbits.LD3 = 1;
   331  0000BE  868C               	bsf	140,3,c	;volatile
   332  0000C0                     
   333                           ;Timer0.c: 72:                 LATDbits.LD0 = 1;
   334  0000C0  808C               	bsf	140,0,c	;volatile
   335  0000C2                     
   336                           ;Timer0.c: 73:                 LATDbits.LD1 = 1;
   337  0000C2  828C               	bsf	140,1,c	;volatile
   338  0000C4                     
   339                           ;Timer0.c: 75:                 LATB = display[Sdecenas];
   340  0000C4  5018               	movf	_Sdecenas^0,w,c
   341  0000C6  0D02               	mullw	2
   342  0000C8  0E01               	movlw	low _display
   343  0000CA  24F3               	addwf	243,w,c
   344  0000CC  6ED9               	movwf	fsr2l,c
   345  0000CE  0E00               	movlw	high _display
   346  0000D0  20F4               	addwfc	prodh,w,c
   347  0000D2  6EDA               	movwf	fsr2h,c
   348  0000D4  50DF               	movf	indf2,w,c
   349  0000D6  6E8A               	movwf	138,c	;volatile
   350  0000D8  EF0D  F000         	goto	l761
   351  0000DC  EF07  F000         	goto	start
   352  0000E0                     __end_of_main:
   353                           	opt callstack 0
   354                           
   355 ;; *************** function _InitTMR0 *****************
   356 ;; Defined at:
   357 ;;		line 94 in file "Timer0.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   371 ;;      Params:         0       0       0       0       0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; Hardware stack levels required when called:    1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text1
   386  000166                     __ptext1:
   387                           	opt callstack 0
   388  000166                     _InitTMR0:
   389                           	opt callstack 29
   390  000166                     
   391                           ;Timer0.c: 97:     INTCONbits.GIE = 0;
   392  000166  9EF2               	bcf	242,7,c	;volatile
   393                           
   394                           ;Timer0.c: 98:     T0CONbits.T0CS = 0;
   395  000168  9AD5               	bcf	213,5,c	;volatile
   396                           
   397                           ;Timer0.c: 99:     T0CONbits.PSA = 0;
   398  00016A  96D5               	bcf	213,3,c	;volatile
   399  00016C                     
   400                           ;Timer0.c: 100:     T0CONbits.T0PS = 0b111;
   401  00016C  0E07               	movlw	7
   402  00016E  12D5               	iorwf	213,f,c	;volatile
   403  000170                     
   404                           ;Timer0.c: 101:     T0CONbits.T08BIT = 0;
   405  000170  9CD5               	bcf	213,6,c	;volatile
   406  000172                     
   407                           ;Timer0.c: 102:     INTCONbits.TMR0IF = 0;
   408  000172  94F2               	bcf	242,2,c	;volatile
   409  000174                     
   410                           ;Timer0.c: 103:     INTCONbits.TMR0IE = 1;
   411  000174  8AF2               	bsf	242,5,c	;volatile
   412  000176                     
   413                           ;Timer0.c: 104:     INTCONbits.PEIE = 1;
   414  000176  8CF2               	bsf	242,6,c	;volatile
   415  000178                     
   416                           ;Timer0.c: 105:     INTCONbits.GIE = 1;
   417  000178  8EF2               	bsf	242,7,c	;volatile
   418  00017A                     
   419                           ;Timer0.c: 106:     T0CONbits.TMR0ON = 1;
   420  00017A  8ED5               	bsf	213,7,c	;volatile
   421  00017C                     
   422                           ;Timer0.c: 109:     TMR0H = DATTMR0;
   423  00017C  C015  FFD7         	movff	_DATTMR0,4055	;volatile
   424                           
   425                           ;Timer0.c: 110:     TMR0L = (DATTMR0) >> 8;
   426  000180  5016               	movf	(_DATTMR0+1)^0,w,c
   427  000182  6ED6               	movwf	214,c	;volatile
   428  000184  0012               	return		;funcret
   429  000186                     __end_of_InitTMR0:
   430                           	opt callstack 0
   431                           
   432 ;; *************** function _Init *****************
   433 ;; Defined at:
   434 ;;		line 84 in file "Timer0.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   448 ;;      Params:         0       0       0       0       0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0       0       0
   451 ;;      Totals:         0       0       0       0       0       0       0       0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; Hardware stack levels required when called:    1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text2
   463  0001A0                     __ptext2:
   464                           	opt callstack 0
   465  0001A0                     _Init:
   466                           	opt callstack 29
   467  0001A0                     
   468                           ;Timer0.c: 86:     ADCON1bits.PCFG = 0XFF;
   469  0001A0  0E0F               	movlw	15
   470  0001A2  12C1               	iorwf	193,f,c	;volatile
   471                           
   472                           ;Timer0.c: 87:     TRISD = 0x00;
   473  0001A4  0E00               	movlw	0
   474  0001A6  6E95               	movwf	149,c	;volatile
   475                           
   476                           ;Timer0.c: 88:     TRISB = 0x00;
   477  0001A8  0E00               	movlw	0
   478  0001AA  6E93               	movwf	147,c	;volatile
   479                           
   480                           ;Timer0.c: 89:     LATD = 0x1F;
   481  0001AC  0E1F               	movlw	31
   482  0001AE  6E8C               	movwf	140,c	;volatile
   483                           
   484                           ;Timer0.c: 90:     LATB = 0x00;
   485  0001B0  0E00               	movlw	0
   486  0001B2  6E8A               	movwf	138,c	;volatile
   487  0001B4  0012               	return		;funcret
   488  0001B6                     __end_of_Init:
   489                           	opt callstack 0
   490                           
   491 ;; *************** function _Timer0 *****************
   492 ;; Defined at:
   493 ;;		line 114 in file "Timer0.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   507 ;;      Params:         0       0       0       0       0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0
   509 ;;      Temps:          4       0       0       0       0       0       0       0       0
   510 ;;      Totals:         4       0       0       0       0       0       0       0       0
   511 ;;Total ram usage:        4 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		Interrupt level 2
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	intcode
   521  000008                     __pintcode:
   522                           	opt callstack 0
   523  000008                     _Timer0:
   524                           	opt callstack 29
   525                           
   526                           ;incstack = 0
   527  000008  821F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   528  00000A  ED70  F000         	call	int_func,f	;refresh shadow registers
   529                           
   530                           	psect	intcode_body
   531  0000E0                     __pintcode_body:
   532                           	opt callstack 29
   533  0000E0                     int_func:
   534                           	opt callstack 29
   535  0000E0  0006               	pop		; remove dummy address from shadow register refresh
   536  0000E2  CFD9 F01B          	movff	fsr2l,??_Timer0
   537  0000E6  CFDA F01C          	movff	fsr2h,??_Timer0+1
   538  0000EA  CFF3 F01D          	movff	prodl,??_Timer0+2
   539  0000EE  CFF4 F01E          	movff	prodh,??_Timer0+3
   540  0000F2                     
   541                           ;Timer0.c: 116:     if (INTCONbits.T0IF) {
   542  0000F2  A4F2               	btfss	242,2,c	;volatile
   543  0000F4  EF7E  F000         	goto	i2u5_41
   544  0000F8  EF80  F000         	goto	i2u5_40
   545  0000FC                     i2u5_41:
   546  0000FC  EF94  F000         	goto	i2l63
   547  000100                     i2u5_40:
   548  000100                     
   549                           ;Timer0.c: 117:         TMR0H = DATTMR0;
   550  000100  C015  FFD7         	movff	_DATTMR0,4055	;volatile
   551  000104                     
   552                           ;Timer0.c: 118:         TMR0L = (DATTMR0) >> 8;
   553  000104  5016               	movf	(_DATTMR0+1)^0,w,c
   554  000106  6ED6               	movwf	214,c	;volatile
   555  000108                     
   556                           ;Timer0.c: 119:         Sunidades++;
   557  000108  2A1A               	incf	_Sunidades^0,f,c
   558  00010A                     
   559                           ;Timer0.c: 120:         LATDbits.LD3 = 0;
   560  00010A  968C               	bcf	140,3,c	;volatile
   561  00010C                     
   562                           ;Timer0.c: 121:         LATDbits.LD0 = 1;
   563  00010C  808C               	bsf	140,0,c	;volatile
   564  00010E                     
   565                           ;Timer0.c: 122:         LATDbits.LD1 = 1;
   566  00010E  828C               	bsf	140,1,c	;volatile
   567  000110                     
   568                           ;Timer0.c: 123:         LATDbits.LD2 = 1;
   569  000110  848C               	bsf	140,2,c	;volatile
   570  000112                     
   571                           ;Timer0.c: 124:         LATB = display[Sunidades];
   572  000112  501A               	movf	_Sunidades^0,w,c
   573  000114  0D02               	mullw	2
   574  000116  0E01               	movlw	low _display
   575  000118  24F3               	addwf	243,w,c
   576  00011A  6ED9               	movwf	fsr2l,c
   577  00011C  0E00               	movlw	high _display
   578  00011E  20F4               	addwfc	prodh,w,c
   579  000120  6EDA               	movwf	fsr2h,c
   580  000122  50DF               	movf	indf2,w,c
   581  000124  6E8A               	movwf	138,c	;volatile
   582  000126                     
   583                           ;Timer0.c: 125:         INTCONbits.T0IF = 0;
   584  000126  94F2               	bcf	242,2,c	;volatile
   585  000128                     i2l63:
   586  000128  C01E  FFF4         	movff	??_Timer0+3,prodh
   587  00012C  C01D  FFF3         	movff	??_Timer0+2,prodl
   588  000130  C01C  FFDA         	movff	??_Timer0+1,fsr2h
   589  000134  C01B  FFD9         	movff	??_Timer0,fsr2l
   590  000138  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   591  00013A  0011               	retfie		f
   592  00013C                     __end_of_Timer0:
   593                           	opt callstack 0
   594  0000                     
   595                           	psect	rparam
   596  0000                     
   597                           	psect	temp
   598  00001F                     btemp:
   599                           	opt callstack 0
   600  00001F                     	ds	1
   601  0000                     int$flags	set	btemp
   602  0000                     wtemp8	set	btemp+1
   603  0000                     ttemp5	set	btemp+1
   604  0000                     ttemp6	set	btemp+4
   605  0000                     ttemp7	set	btemp+8
   606                           tosu	equ	0xFFF
   607                           tosh	equ	0xFFE
   608                           tosl	equ	0xFFD
   609                           stkptr	equ	0xFFC
   610                           pclatu	equ	0xFFB
   611                           pclath	equ	0xFFA
   612                           pcl	equ	0xFF9
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           prodh	equ	0xFF4
   618                           prodl	equ	0xFF3
   619                           indf0	equ	0xFEF
   620                           postinc0	equ	0xFEE
   621                           postdec0	equ	0xFED
   622                           preinc0	equ	0xFEC
   623                           plusw0	equ	0xFEB
   624                           fsr0h	equ	0xFEA
   625                           fsr0l	equ	0xFE9
   626                           wreg	equ	0xFE8
   627                           indf1	equ	0xFE7
   628                           postinc1	equ	0xFE6
   629                           postdec1	equ	0xFE5
   630                           preinc1	equ	0xFE4
   631                           plusw1	equ	0xFE3
   632                           fsr1h	equ	0xFE2
   633                           fsr1l	equ	0xFE1
   634                           bsr	equ	0xFE0
   635                           indf2	equ	0xFDF
   636                           postinc2	equ	0xFDE
   637                           postdec2	equ	0xFDD
   638                           preinc2	equ	0xFDC
   639                           plusw2	equ	0xFDB
   640                           fsr2h	equ	0xFDA
   641                           fsr2l	equ	0xFD9
   642                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        26
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _Init
                           _InitTMR0
 ---------------------------------------------------------------------------------
 (1) _InitTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer0                                               4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _InitTMR0

 _Timer0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4      1E       1       31.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      20        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 19 02:47:49 2021

                     l54 01B4                       l57 0184                       u10 002C  
                     u11 0028                       u20 0042                       u21 003E  
                     u30 0058                       u31 0054                       u40 006E  
                     u41 006A              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000              __CFG_WDT$ON 000000  
                    l801 00BA                      l811 00C4                      l803 00BC  
                    l741 0166                      l805 00BE                      l751 0176  
                    l743 016C                      l807 00C0                      l753 0178  
                    l745 0170                      l809 00C2                      l761 001A  
                    l739 01A0                      l755 017A                      l747 0172  
                    l771 0058                      l763 002C                      l757 017C  
                    l749 0174                      l781 007A                      l773 005C  
                    l765 0030                      l791 009A                      l783 007C  
                    l775 006E                      l767 0042                      l759 0012  
                    l793 009C                      l785 007E                      l777 0076  
                    l769 0046                      l795 009E                      l787 0080  
                    l779 0078                      l797 00A0                      l789 0098  
                    l799 00A2             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    prod 000FF3                     _LATB 000F8A                     _LATD 000F8C  
                   i2l63 0128                     _Init 01A0                     _main 0012  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 001F                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$1 000000  
                  ?_Init 001B           __CFG_CCP2MX$ON 000000                    ?_main 001B  
                  i2l821 010A                    i2l813 00F2                    i2l831 0126  
                  i2l823 010C                    i2l815 0100                    i2l825 010E  
                  i2l817 0104                    i2l827 0110                    i2l819 0108  
                  i2l829 0112                    _TMR0H 000FD7                    _TMR0L 000FD6  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
                  ttemp5 0020                    ttemp6 0023                    ttemp7 0027  
                  status 000FD8                    wtemp8 0020           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000          __initialization 013C             __end_of_Init 01B6  
           __end_of_main 00E0         __end_of_InitTMR0 0186                   ??_Init 001F  
                 ??_main 001F            __activetblptr 000000                   i2u5_40 0100  
                 i2u5_41 00FC           __CFG_XINST$OFF 000000                   _Timer0 0008  
         __CFG_STVREN$ON 000000             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8          __CFG_FOSC$EC_EC 000000  
             __accesstop 0060  __end_of__initialization 015C            ___rparam_used 000001  
         __pcstackCOMRAM 001B                ?_InitTMR0 001B                  ?_Timer0 001B  
                _DATTMR0 0015               ??_InitTMR0 001F          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000          __size_of_Timer0 0134  
                __pcinit 013C                  __ramtop 0800                  __ptext0 0012  
                __ptext1 0166                  __ptext2 01A0                  _display 0001  
              _T0CONbits 000FD5           __pintcode_body 00E0     end_of_initialization 015C  
                int_func 00E0                  postdec1 000FE5                  postinc0 000FEE  
         __end_of_Timer0 013C            __pidataCOMRAM 0186      start_initialization 013C  
      __size_of_InitTMR0 0020                 ??_Timer0 001B                _Munidades 0019  
       __CFG_LPT1OSC$OFF 000000                _Sunidades 001A                __pintcode 0008  
               _LATDbits 000F8C         __CFG_WDTPS$32768 000000               _ADCON1bits 000FC1  
              copy_data0 0150                 _Mdecenas 0017                 _InitTMR0 0166  
               _Sdecenas 0018                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_Init 0016            __size_of_main 00CE                 int$flags 001F  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
