

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 18 23:35:09 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	idataCOMRAM
    52  007F40                     __pidataCOMRAM:
    53                           	opt callstack 0
    54                           
    55                           ;initializer for _display
    56  007F40  003F               	dw	63
    57  007F42  0006               	dw	6
    58  007F44  005B               	dw	91
    59  007F46  004F               	dw	79
    60  007F48  0066               	dw	102
    61  007F4A  006D               	dw	109
    62  007F4C  007D               	dw	125
    63  007F4E  0007               	dw	7
    64  007F50  007F               	dw	127
    65  007F52  0067               	dw	103
    66                           
    67                           ;initializer for _DATTMR0
    68  007F54  E17D               	dw	57725
    69  0000                     _T0CONbits	set	4053
    70  0000                     _LATD	set	3980
    71  0000                     _TRISB	set	3987
    72  0000                     _TRISD	set	3989
    73  0000                     _ADCON1bits	set	4033
    74  0000                     _LATB	set	3978
    75  0000                     _TMR0L	set	4054
    76  0000                     _TMR0H	set	4055
    77  0000                     _INTCONbits	set	4082
    78  0000                     _LATDbits	set	3980
    79                           
    80                           ; #config settings
    81  0000                     
    82                           	psect	cinit
    83  007F6E                     __pcinit:
    84                           	opt callstack 0
    85  007F6E                     start_initialization:
    86                           	opt callstack 0
    87  007F6E                     __initialization:
    88                           	opt callstack 0
    89                           
    90                           ; Initialize objects allocated to COMRAM (22 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92  007F6E  0E40               	movlw	low __pidataCOMRAM
    93  007F70  6EF6               	movwf	tblptrl,c
    94  007F72  0E7F               	movlw	high __pidataCOMRAM
    95  007F74  6EF7               	movwf	tblptrh,c
    96  007F76  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97  007F78  6EF8               	movwf	tblptru,c
    98  007F7A  EE00  F001         	lfsr	0,__pdataCOMRAM
    99  007F7E  EE10 F016          	lfsr	1,22
   100  007F82                     copy_data0:
   101  007F82  0009               	tblrd		*+
   102  007F84  CFF5 FFEE          	movff	tablat,postinc0
   103  007F88  50E5               	movf	postdec1,w,c
   104  007F8A  50E1               	movf	fsr1l,w,c
   105  007F8C  E1FA               	bnz	copy_data0
   106                           
   107                           ; Clear objects allocated to COMRAM (2 bytes)
   108  007F8E  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   109  007F90  6A17               	clrf	__pbssCOMRAM& (0+255),c
   110  007F92                     end_of_initialization:
   111                           	opt callstack 0
   112  007F92                     __end_of__initialization:
   113                           	opt callstack 0
   114  007F92  0100               	movlb	0
   115  007F94  EFCC  F03F         	goto	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMRAM
   118  000017                     __pbssCOMRAM:
   119                           	opt callstack 0
   120  000017                     _count:
   121                           	opt callstack 0
   122  000017                     	ds	2
   123                           
   124                           	psect	dataCOMRAM
   125  000001                     __pdataCOMRAM:
   126                           	opt callstack 0
   127  000001                     _display:
   128                           	opt callstack 0
   129  000001                     	ds	20
   130  000015                     _DATTMR0:
   131                           	opt callstack 0
   132  000015                     	ds	2
   133                           
   134                           	psect	cstackCOMRAM
   135  000000                     __pcstackCOMRAM:
   136                           	opt callstack 0
   137  000000                     
   138                           ; 1 bytes @ 0x0
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   141 ;;
   142 ;; *************** function _main *****************
   143 ;; Defined at:
   144 ;;		line 31 in file "Timer0.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;		None
   149 ;; Return value:  Size  Location     Type
   150 ;;                  1    wreg      void 
   151 ;; Registers used:
   152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   153 ;; Tracked objects:
   154 ;;		On entry : 0/0
   155 ;;		On exit  : 0/0
   156 ;;		Unchanged: 0/0
   157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   158 ;;      Params:         0       0       0       0       0       0       0       0       0
   159 ;;      Locals:         0       0       0       0       0       0       0       0       0
   160 ;;      Temps:          0       0       0       0       0       0       0       0       0
   161 ;;      Totals:         0       0       0       0       0       0       0       0       0
   162 ;;Total ram usage:        0 bytes
   163 ;; Hardware stack levels required when called:    1
   164 ;; This function calls:
   165 ;;		_Init
   166 ;;		_InitTMR0
   167 ;; This function is called by:
   168 ;;		Startup code after reset
   169 ;; This function uses a non-reentrant model
   170 ;;
   171                           
   172                           	psect	text0
   173  007F98                     __ptext0:
   174                           	opt callstack 0
   175  007F98                     _main:
   176                           	opt callstack 30
   177  007F98                     
   178                           ;Timer0.c: 33:     Init();
   179  007F98  EC95  F03F         	call	_Init	;wreg free
   180                           
   181                           ;Timer0.c: 34:     InitTMR0();
   182  007F9C  ECAB  F03F         	call	_InitTMR0	;wreg free
   183  007FA0                     l742:
   184                           
   185                           ;Timer0.c: 37:         LATDbits.LD3 = 0;
   186  007FA0  968C               	bcf	140,3,c	;volatile
   187  007FA2                     
   188                           ;Timer0.c: 38:         if (INTCONbits.T0IF) {
   189  007FA2  A4F2               	btfss	242,2,c	;volatile
   190  007FA4  EFD6  F03F         	goto	u11
   191  007FA8  EFD8  F03F         	goto	u10
   192  007FAC                     u11:
   193  007FAC  EFD0  F03F         	goto	l742
   194  007FB0                     u10:
   195  007FB0                     
   196                           ;Timer0.c: 39:             TMR0H = DATTMR0;
   197  007FB0  0E7D               	movlw	125
   198  007FB2  6ED7               	movwf	215,c	;volatile
   199                           
   200                           ;Timer0.c: 40:             TMR0L = (DATTMR0) >> 8;
   201  007FB4  0EE1               	movlw	225
   202  007FB6  6ED6               	movwf	214,c	;volatile
   203  007FB8                     
   204                           ;Timer0.c: 41:             LATB = display[count++];
   205  007FB8  90D8               	bcf	status,0,c
   206  007FBA  3417               	rlcf	_count^0,w,c
   207  007FBC  6ED9               	movwf	fsr2l,c
   208  007FBE  3418               	rlcf	(_count+1)^0,w,c
   209  007FC0  6EDA               	movwf	fsr2h,c
   210  007FC2  0E01               	movlw	low _display
   211  007FC4  26D9               	addwf	fsr2l,f,c
   212  007FC6  0E00               	movlw	high _display
   213  007FC8  22DA               	addwfc	fsr2h,f,c
   214  007FCA  50DF               	movf	indf2,w,c
   215  007FCC  6E8A               	movwf	138,c	;volatile
   216  007FCE  4A17               	infsnz	_count^0,f,c
   217  007FD0  2A18               	incf	(_count+1)^0,f,c
   218  007FD2                     
   219                           ;Timer0.c: 42:             if (count > 9) {
   220  007FD2  BE18               	btfsc	(_count+1)^0,7,c
   221  007FD4  EFF5  F03F         	goto	u21
   222  007FD8  5018               	movf	(_count+1)^0,w,c
   223  007FDA  E109               	bnz	u20
   224  007FDC  0E0A               	movlw	10
   225  007FDE  5C17               	subwf	_count^0,w,c
   226  007FE0  A0D8               	btfss	status,0,c
   227  007FE2  EFF5  F03F         	goto	u21
   228  007FE6  EFF7  F03F         	goto	u20
   229  007FEA                     u21:
   230  007FEA  EFFB  F03F         	goto	l756
   231  007FEE                     u20:
   232  007FEE                     
   233                           ;Timer0.c: 43:                 count = 0;
   234  007FEE  0E00               	movlw	0
   235  007FF0  6E18               	movwf	(_count+1)^0,c
   236  007FF2  0E00               	movlw	0
   237  007FF4  6E17               	movwf	_count^0,c
   238  007FF6                     l756:
   239                           
   240                           ;Timer0.c: 45:             INTCONbits.T0IF = 0;
   241  007FF6  94F2               	bcf	242,2,c	;volatile
   242  007FF8  EFD0  F03F         	goto	l742
   243  007FFC  EF00  F000         	goto	start
   244  008000                     __end_of_main:
   245                           	opt callstack 0
   246                           
   247 ;; *************** function _InitTMR0 *****************
   248 ;; Defined at:
   249 ;;		line 66 in file "Timer0.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, status,2
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   263 ;;      Params:         0       0       0       0       0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels used:    1
   269 ;; This function calls:
   270 ;;		Nothing
   271 ;; This function is called by:
   272 ;;		_main
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text1
   277  007F56                     __ptext1:
   278                           	opt callstack 0
   279  007F56                     _InitTMR0:
   280                           	opt callstack 30
   281  007F56                     
   282                           ;Timer0.c: 69:     INTCONbits.GIE = 0;
   283  007F56  9EF2               	bcf	242,7,c	;volatile
   284                           
   285                           ;Timer0.c: 70:     T0CONbits.T0CS = 0;
   286  007F58  9AD5               	bcf	213,5,c	;volatile
   287                           
   288                           ;Timer0.c: 71:     T0CONbits.PSA = 0;
   289  007F5A  96D5               	bcf	213,3,c	;volatile
   290  007F5C                     
   291                           ;Timer0.c: 72:     T0CONbits.T0PS = 0b111;
   292  007F5C  0E07               	movlw	7
   293  007F5E  12D5               	iorwf	213,f,c	;volatile
   294  007F60                     
   295                           ;Timer0.c: 73:     T0CONbits.T08BIT = 0;
   296  007F60  9CD5               	bcf	213,6,c	;volatile
   297  007F62                     
   298                           ;Timer0.c: 74:     INTCONbits.TMR0IF = 0;
   299  007F62  94F2               	bcf	242,2,c	;volatile
   300  007F64                     
   301                           ;Timer0.c: 75:     INTCONbits.TMR0IE = 1;
   302  007F64  8AF2               	bsf	242,5,c	;volatile
   303  007F66                     
   304                           ;Timer0.c: 76:     INTCONbits.PEIE = 1;
   305  007F66  8CF2               	bsf	242,6,c	;volatile
   306  007F68                     
   307                           ;Timer0.c: 77:     INTCONbits.GIE = 1;
   308  007F68  8EF2               	bsf	242,7,c	;volatile
   309  007F6A                     
   310                           ;Timer0.c: 78:     T0CONbits.TMR0ON = 1;
   311  007F6A  8ED5               	bsf	213,7,c	;volatile
   312  007F6C  0012               	return		;funcret
   313  007F6E                     __end_of_InitTMR0:
   314                           	opt callstack 0
   315                           
   316 ;; *************** function _Init *****************
   317 ;; Defined at:
   318 ;;		line 56 in file "Timer0.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   332 ;;      Params:         0       0       0       0       0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0
   335 ;;      Totals:         0       0       0       0       0       0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels used:    1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text2
   346  007F2A                     __ptext2:
   347                           	opt callstack 0
   348  007F2A                     _Init:
   349                           	opt callstack 30
   350  007F2A                     
   351                           ;Timer0.c: 58:     ADCON1bits.PCFG = 0XFF;
   352  007F2A  0E0F               	movlw	15
   353  007F2C  12C1               	iorwf	193,f,c	;volatile
   354                           
   355                           ;Timer0.c: 59:     TRISD = 0x00;
   356  007F2E  0E00               	movlw	0
   357  007F30  6E95               	movwf	149,c	;volatile
   358                           
   359                           ;Timer0.c: 60:     TRISB = 0x00;
   360  007F32  0E00               	movlw	0
   361  007F34  6E93               	movwf	147,c	;volatile
   362                           
   363                           ;Timer0.c: 61:     LATD = 0x1F;
   364  007F36  0E1F               	movlw	31
   365  007F38  6E8C               	movwf	140,c	;volatile
   366                           
   367                           ;Timer0.c: 62:     LATB = 0x00;
   368  007F3A  0E00               	movlw	0
   369  007F3C  6E8A               	movwf	138,c	;volatile
   370  007F3E  0012               	return		;funcret
   371  007F40                     __end_of_Init:
   372                           	opt callstack 0
   373  0000                     
   374                           	psect	rparam
   375  0000                     tosu	equ	0xFFF
   376                           tosh	equ	0xFFE
   377                           tosl	equ	0xFFD
   378                           stkptr	equ	0xFFC
   379                           pclatu	equ	0xFFB
   380                           pclath	equ	0xFFA
   381                           pcl	equ	0xFF9
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           prodh	equ	0xFF4
   387                           prodl	equ	0xFF3
   388                           indf0	equ	0xFEF
   389                           postinc0	equ	0xFEE
   390                           postdec0	equ	0xFED
   391                           preinc0	equ	0xFEC
   392                           plusw0	equ	0xFEB
   393                           fsr0h	equ	0xFEA
   394                           fsr0l	equ	0xFE9
   395                           wreg	equ	0xFE8
   396                           indf1	equ	0xFE7
   397                           postinc1	equ	0xFE6
   398                           postdec1	equ	0xFE5
   399                           preinc1	equ	0xFE4
   400                           plusw1	equ	0xFE3
   401                           fsr1h	equ	0xFE2
   402                           fsr1l	equ	0xFE1
   403                           bsr	equ	0xFE0
   404                           indf2	equ	0xFDF
   405                           postinc2	equ	0xFDE
   406                           postdec2	equ	0xFDD
   407                           preinc2	equ	0xFDC
   408                           plusw2	equ	0xFDB
   409                           fsr2h	equ	0xFDA
   410                           fsr2l	equ	0xFD9
   411                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _Init
                           _InitTMR0
 ---------------------------------------------------------------------------------
 (1) _InitTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _InitTMR0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0      18       1       25.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 18 23:35:09 2021

                     l43 7F3E                       l46 7F6C                       u10 7FB0  
                     u11 7FAC                       u20 7FEE                       u21 7FEA  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000              __CFG_WDT$ON 000000                      l722 7F2A  
                    l730 7F62                      l732 7F64                      l724 7F56  
                    l740 7F98                      l734 7F66                      l726 7F5C  
                    l750 7FCE                      l742 7FA0                      l736 7F68  
                    l728 7F60                      l752 7FD2                      l744 7FA2  
                    l738 7F6A                      l754 7FEE                      l746 7FB0  
                    l756 7FF6                      l748 7FB8             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                     _LATB 000F8A                     _LATD 000F8C  
                   _Init 7F2A                     _main 7F98                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000                    ?_Init 0000  
         __CFG_CCP2MX$ON 000000                    ?_main 0000                    _TMR0H 000FD7  
                  _TMR0L 000FD6            __CFG_USBDIV$1 000000                    _TRISB 000F93  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _count 0017                    tablat 000FF5                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 7F6E  
           __end_of_Init 7F40             __end_of_main 8000         __end_of_InitTMR0 7F6E  
                 ??_Init 0000                   ??_main 0000            __activetblptr 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
        __CFG_FOSC$EC_EC 000000               __accesstop 0060  __end_of__initialization 7F92  
          ___rparam_used 000001           __pcstackCOMRAM 0000                ?_InitTMR0 0000  
                _DATTMR0 0015               ??_InitTMR0 0000          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F6E  
                __ramtop 0800                  __ptext0 7F98                  __ptext1 7F56  
                __ptext2 7F2A                  _display 0001                _T0CONbits 000FD5  
   end_of_initialization 7F92                  postdec1 000FE5                  postinc0 000FEE  
          __pidataCOMRAM 7F40      start_initialization 7F6E        __size_of_InitTMR0 0018  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0017                 _LATDbits 000F8C  
       __CFG_WDTPS$32768 000000               _ADCON1bits 000FC1                copy_data0 7F82  
               _InitTMR0 7F56                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_Init 0016            __size_of_main 0068    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2  
