

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 19 00:16:31 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  0000D0                     __pidataCOMRAM:
    56                           	opt callstack 0
    57                           
    58                           ;initializer for _display
    59  0000D0  003F               	dw	63
    60  0000D2  0006               	dw	6
    61  0000D4  005B               	dw	91
    62  0000D6  004F               	dw	79
    63  0000D8  0066               	dw	102
    64  0000DA  006D               	dw	109
    65  0000DC  007D               	dw	125
    66  0000DE  0007               	dw	7
    67  0000E0  007F               	dw	127
    68  0000E2  0067               	dw	103
    69                           
    70                           ;initializer for _DATTMR0
    71  0000E4  FCF2               	dw	64754
    72  0000                     _TMR0L	set	4054
    73  0000                     _TMR0H	set	4055
    74  0000                     _T0CONbits	set	4053
    75  0000                     _INTCONbits	set	4082
    76  0000                     _LATD	set	3980
    77  0000                     _TRISB	set	3987
    78  0000                     _TRISD	set	3989
    79  0000                     _ADCON1bits	set	4033
    80  0000                     _LATB	set	3978
    81  0000                     _LATDbits	set	3980
    82                           
    83                           ; #config settings
    84  0000                     
    85                           	psect	cinit
    86  000058                     __pcinit:
    87                           	opt callstack 0
    88  000058                     start_initialization:
    89                           	opt callstack 0
    90  000058                     __initialization:
    91                           	opt callstack 0
    92                           
    93                           ; Initialize objects allocated to COMRAM (22 bytes)
    94                           ; load TBLPTR registers with __pidataCOMRAM
    95  000058  0ED0               	movlw	low __pidataCOMRAM
    96  00005A  6EF6               	movwf	tblptrl,c
    97  00005C  0E00               	movlw	high __pidataCOMRAM
    98  00005E  6EF7               	movwf	tblptrh,c
    99  000060  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   100  000062  6EF8               	movwf	tblptru,c
   101  000064  EE00  F001         	lfsr	0,__pdataCOMRAM
   102  000068  EE10 F016          	lfsr	1,22
   103  00006C                     copy_data0:
   104  00006C  0009               	tblrd		*+
   105  00006E  CFF5 FFEE          	movff	tablat,postinc0
   106  000072  50E5               	movf	postdec1,w,c
   107  000074  50E1               	movf	fsr1l,w,c
   108  000076  E1FA               	bnz	copy_data0
   109                           
   110                           ; Clear objects allocated to COMRAM (2 bytes)
   111  000078  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   112  00007A  6A17               	clrf	__pbssCOMRAM& (0+255),c
   113  00007C                     end_of_initialization:
   114                           	opt callstack 0
   115  00007C                     __end_of__initialization:
   116                           	opt callstack 0
   117  00007C  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   118  00007E  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   119  000080  0100               	movlb	0
   120  000082  EF43  F000         	goto	_main	;jump to C main() function
   121                           
   122                           	psect	bssCOMRAM
   123  000017                     __pbssCOMRAM:
   124                           	opt callstack 0
   125  000017                     _count:
   126                           	opt callstack 0
   127  000017                     	ds	2
   128                           
   129                           	psect	dataCOMRAM
   130  000001                     __pdataCOMRAM:
   131                           	opt callstack 0
   132  000001                     _display:
   133                           	opt callstack 0
   134  000001                     	ds	20
   135  000015                     _DATTMR0:
   136                           	opt callstack 0
   137  000015                     	ds	2
   138                           
   139                           	psect	cstackCOMRAM
   140  000000                     __pcstackCOMRAM:
   141                           	opt callstack 0
   142  000000                     
   143                           ; 1 bytes @ 0x0
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 31 in file "Timer0.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   163 ;;      Params:         0       0       0       0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0
   165 ;;      Temps:          0       0       0       0       0       0       0       0       0
   166 ;;      Totals:         0       0       0       0       0       0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels required when called:    2
   169 ;; This function calls:
   170 ;;		_Init
   171 ;;		_InitTMR0
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text0
   178  000086                     __ptext0:
   179                           	opt callstack 0
   180  000086                     _main:
   181                           	opt callstack 29
   182  000086                     
   183                           ;Timer0.c: 33:     Init();
   184  000086  EC73  F000         	call	_Init	;wreg free
   185                           
   186                           ;Timer0.c: 34:     InitTMR0();
   187  00008A  EC58  F000         	call	_InitTMR0	;wreg free
   188  00008E                     l749:
   189                           
   190                           ;Timer0.c: 37:         LATDbits.LD3 = 0;
   191  00008E  968C               	bcf	140,3,c	;volatile
   192  000090                     
   193                           ;Timer0.c: 38:         LATDbits.LD2 = 0;
   194  000090  948C               	bcf	140,2,c	;volatile
   195  000092                     
   196                           ;Timer0.c: 39:         LATB = display[count];
   197  000092  90D8               	bcf	status,0,c
   198  000094  3417               	rlcf	_count^0,w,c
   199  000096  6ED9               	movwf	fsr2l,c
   200  000098  3418               	rlcf	(_count+1)^0,w,c
   201  00009A  6EDA               	movwf	fsr2h,c
   202  00009C  0E01               	movlw	low _display
   203  00009E  26D9               	addwf	fsr2l,f,c
   204  0000A0  0E00               	movlw	high _display
   205  0000A2  22DA               	addwfc	fsr2h,f,c
   206  0000A4  50DF               	movf	indf2,w,c
   207  0000A6  6E8A               	movwf	138,c	;volatile
   208  0000A8  EF47  F000         	goto	l749
   209  0000AC  EF07  F000         	goto	start
   210  0000B0                     __end_of_main:
   211                           	opt callstack 0
   212                           
   213 ;; *************** function _InitTMR0 *****************
   214 ;; Defined at:
   215 ;;		line 59 in file "Timer0.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   229 ;;      Params:         0       0       0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels used:    1
   235 ;; Hardware stack levels required when called:    1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		_main
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text1
   244  0000B0                     __ptext1:
   245                           	opt callstack 0
   246  0000B0                     _InitTMR0:
   247                           	opt callstack 29
   248  0000B0                     
   249                           ;Timer0.c: 62:     INTCONbits.GIE = 0;
   250  0000B0  9EF2               	bcf	242,7,c	;volatile
   251                           
   252                           ;Timer0.c: 63:     T0CONbits.T0CS = 0;
   253  0000B2  9AD5               	bcf	213,5,c	;volatile
   254                           
   255                           ;Timer0.c: 64:     T0CONbits.PSA = 0;
   256  0000B4  96D5               	bcf	213,3,c	;volatile
   257  0000B6                     
   258                           ;Timer0.c: 65:     T0CONbits.T0PS = 0b111;
   259  0000B6  0E07               	movlw	7
   260  0000B8  12D5               	iorwf	213,f,c	;volatile
   261  0000BA                     
   262                           ;Timer0.c: 66:     T0CONbits.T08BIT = 0;
   263  0000BA  9CD5               	bcf	213,6,c	;volatile
   264  0000BC                     
   265                           ;Timer0.c: 67:     INTCONbits.TMR0IF = 0;
   266  0000BC  94F2               	bcf	242,2,c	;volatile
   267  0000BE                     
   268                           ;Timer0.c: 68:     INTCONbits.TMR0IE = 1;
   269  0000BE  8AF2               	bsf	242,5,c	;volatile
   270  0000C0                     
   271                           ;Timer0.c: 69:     INTCONbits.PEIE = 1;
   272  0000C0  8CF2               	bsf	242,6,c	;volatile
   273  0000C2                     
   274                           ;Timer0.c: 70:     INTCONbits.GIE = 1;
   275  0000C2  8EF2               	bsf	242,7,c	;volatile
   276  0000C4                     
   277                           ;Timer0.c: 71:     T0CONbits.TMR0ON = 1;
   278  0000C4  8ED5               	bsf	213,7,c	;volatile
   279  0000C6                     
   280                           ;Timer0.c: 74:     TMR0H = DATTMR0;
   281  0000C6  C015  FFD7         	movff	_DATTMR0,4055	;volatile
   282                           
   283                           ;Timer0.c: 75:     TMR0L = (DATTMR0) >> 8;
   284  0000CA  5016               	movf	(_DATTMR0+1)^0,w,c
   285  0000CC  6ED6               	movwf	214,c	;volatile
   286  0000CE  0012               	return		;funcret
   287  0000D0                     __end_of_InitTMR0:
   288                           	opt callstack 0
   289                           
   290 ;; *************** function _Init *****************
   291 ;; Defined at:
   292 ;;		line 49 in file "Timer0.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   306 ;;      Params:         0       0       0       0       0       0       0       0       0
   307 ;;      Locals:         0       0       0       0       0       0       0       0       0
   308 ;;      Temps:          0       0       0       0       0       0       0       0       0
   309 ;;      Totals:         0       0       0       0       0       0       0       0       0
   310 ;;Total ram usage:        0 bytes
   311 ;; Hardware stack levels used:    1
   312 ;; Hardware stack levels required when called:    1
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		_main
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text2
   321  0000E6                     __ptext2:
   322                           	opt callstack 0
   323  0000E6                     _Init:
   324                           	opt callstack 29
   325  0000E6                     
   326                           ;Timer0.c: 51:     ADCON1bits.PCFG = 0XFF;
   327  0000E6  0E0F               	movlw	15
   328  0000E8  12C1               	iorwf	193,f,c	;volatile
   329                           
   330                           ;Timer0.c: 52:     TRISD = 0x00;
   331  0000EA  0E00               	movlw	0
   332  0000EC  6E95               	movwf	149,c	;volatile
   333                           
   334                           ;Timer0.c: 53:     TRISB = 0x00;
   335  0000EE  0E00               	movlw	0
   336  0000F0  6E93               	movwf	147,c	;volatile
   337                           
   338                           ;Timer0.c: 54:     LATD = 0x1F;
   339  0000F2  0E1F               	movlw	31
   340  0000F4  6E8C               	movwf	140,c	;volatile
   341                           
   342                           ;Timer0.c: 55:     LATB = 0x00;
   343  0000F6  0E00               	movlw	0
   344  0000F8  6E8A               	movwf	138,c	;volatile
   345  0000FA  0012               	return		;funcret
   346  0000FC                     __end_of_Init:
   347                           	opt callstack 0
   348                           
   349 ;; *************** function _Timer0 *****************
   350 ;; Defined at:
   351 ;;		line 79 in file "Timer0.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   365 ;;      Params:         0       0       0       0       0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		Interrupt level 2
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	intcode
   379  000008                     __pintcode:
   380                           	opt callstack 0
   381  000008                     _Timer0:
   382                           	opt callstack 29
   383                           
   384                           ;incstack = 0
   385  000008  8219               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   386  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   387                           
   388                           	psect	intcode_body
   389  000012                     __pintcode_body:
   390                           	opt callstack 29
   391  000012                     int_func:
   392                           	opt callstack 29
   393  000012  0006               	pop		; remove dummy address from shadow register refresh
   394  000014                     
   395                           ;Timer0.c: 81:     if (INTCONbits.T0IF) {
   396  000014  A4F2               	btfss	242,2,c	;volatile
   397  000016  EF0F  F000         	goto	i2u1_41
   398  00001A  EF11  F000         	goto	i2u1_40
   399  00001E                     i2u1_41:
   400  00001E  EF2A  F000         	goto	i2l51
   401  000022                     i2u1_40:
   402  000022                     
   403                           ;Timer0.c: 82:         TMR0H = DATTMR0;
   404  000022  C015  FFD7         	movff	_DATTMR0,4055	;volatile
   405  000026                     
   406                           ;Timer0.c: 83:         TMR0L = (DATTMR0) >> 8;
   407  000026  5016               	movf	(_DATTMR0+1)^0,w,c
   408  000028  6ED6               	movwf	214,c	;volatile
   409  00002A                     
   410                           ;Timer0.c: 85:         count++;
   411  00002A  4A17               	infsnz	_count^0,f,c
   412  00002C  2A18               	incf	(_count+1)^0,f,c
   413  00002E                     
   414                           ;Timer0.c: 86:         if (count > 9) {
   415  00002E  BE18               	btfsc	(_count+1)^0,7,c
   416  000030  EF23  F000         	goto	i2u2_41
   417  000034  5018               	movf	(_count+1)^0,w,c
   418  000036  E109               	bnz	i2u2_40
   419  000038  0E0A               	movlw	10
   420  00003A  5C17               	subwf	_count^0,w,c
   421  00003C  A0D8               	btfss	status,0,c
   422  00003E  EF23  F000         	goto	i2u2_41
   423  000042  EF25  F000         	goto	i2u2_40
   424  000046                     i2u2_41:
   425  000046  EF29  F000         	goto	i2l767
   426  00004A                     i2u2_40:
   427  00004A                     
   428                           ;Timer0.c: 87:             count = 0;
   429  00004A  0E00               	movlw	0
   430  00004C  6E18               	movwf	(_count+1)^0,c
   431  00004E  0E00               	movlw	0
   432  000050  6E17               	movwf	_count^0,c
   433  000052                     i2l767:
   434                           
   435                           ;Timer0.c: 89:         INTCONbits.T0IF = 0;
   436  000052  94F2               	bcf	242,2,c	;volatile
   437  000054                     i2l51:
   438  000054  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   439  000056  0011               	retfie		f
   440  000058                     __end_of_Timer0:
   441                           	opt callstack 0
   442  0000                     
   443                           	psect	rparam
   444  0000                     
   445                           	psect	temp
   446  000019                     btemp:
   447                           	opt callstack 0
   448  000019                     	ds	1
   449  0000                     int$flags	set	btemp
   450  0000                     wtemp8	set	btemp+1
   451  0000                     ttemp5	set	btemp+1
   452  0000                     ttemp6	set	btemp+4
   453  0000                     ttemp7	set	btemp+8
   454                           tosu	equ	0xFFF
   455                           tosh	equ	0xFFE
   456                           tosl	equ	0xFFD
   457                           stkptr	equ	0xFFC
   458                           pclatu	equ	0xFFB
   459                           pclath	equ	0xFFA
   460                           pcl	equ	0xFF9
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           prodh	equ	0xFF4
   466                           prodl	equ	0xFF3
   467                           indf0	equ	0xFEF
   468                           postinc0	equ	0xFEE
   469                           postdec0	equ	0xFED
   470                           preinc0	equ	0xFEC
   471                           plusw0	equ	0xFEB
   472                           fsr0h	equ	0xFEA
   473                           fsr0l	equ	0xFE9
   474                           wreg	equ	0xFE8
   475                           indf1	equ	0xFE7
   476                           postinc1	equ	0xFE6
   477                           postdec1	equ	0xFE5
   478                           preinc1	equ	0xFE4
   479                           plusw1	equ	0xFE3
   480                           fsr1h	equ	0xFE2
   481                           fsr1l	equ	0xFE1
   482                           bsr	equ	0xFE0
   483                           indf2	equ	0xFDF
   484                           postinc2	equ	0xFDE
   485                           postdec2	equ	0xFDD
   486                           preinc2	equ	0xFDC
   487                           plusw2	equ	0xFDB
   488                           fsr2h	equ	0xFDA
   489                           fsr2l	equ	0xFD9
   490                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _Init
                           _InitTMR0
 ---------------------------------------------------------------------------------
 (1) _InitTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _InitTMR0

 _Timer0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0      18       1       25.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 19 00:16:31 2021

                     l41 00FA                       l44 00CE              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
            __CFG_WDT$ON 000000                      l731 00B6                      l741 00C2  
                    l733 00BA                      l727 00E6                      l743 00C4  
                    l735 00BC                      l751 0090                      l745 00C6  
                    l737 00BE                      l729 00B0                      l753 0092  
                    l739 00C0                      l747 0086                      l749 008E  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                     _LATB 000F8A  
                   _LATD 000F8C                     i2l51 0054                     _Init 00E6  
                   _main 0086                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0019  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000                    ?_Init 0000  
         __CFG_CCP2MX$ON 000000                    ?_main 0000                    i2l761 002A  
                  i2l763 002E                    i2l755 0014                    i2l765 004A  
                  i2l757 0022                    i2l767 0052                    i2l759 0026  
                  _TMR0H 000FD7                    _TMR0L 000FD6            __CFG_USBDIV$1 000000  
                  _TRISB 000F93                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _count 0017                    tablat 000FF5  
                  ttemp5 001A                    ttemp6 001D                    ttemp7 0021  
                  status 000FD8                    wtemp8 001A           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000          __initialization 0058             __end_of_Init 00FC  
           __end_of_main 00B0         __end_of_InitTMR0 00D0                   ??_Init 0000  
                 ??_main 0000            __activetblptr 000000                   i2u1_40 0022  
                 i2u1_41 001E                   i2u2_40 004A                   i2u2_41 0046  
         __CFG_XINST$OFF 000000                   _Timer0 0008           __CFG_STVREN$ON 000000  
           __pdataCOMRAM 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8          __CFG_FOSC$EC_EC 000000               __accesstop 0060  
__end_of__initialization 007C            ___rparam_used 000001           __pcstackCOMRAM 0000  
              ?_InitTMR0 0000                  ?_Timer0 0000                  _DATTMR0 0015  
             ??_InitTMR0 0000          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000          __size_of_Timer0 0050                  __pcinit 0058  
                __ramtop 0800                  __ptext0 0086                  __ptext1 00B0  
                __ptext2 00E6                  _display 0001                _T0CONbits 000FD5  
         __pintcode_body 0012     end_of_initialization 007C                  int_func 0012  
                postdec1 000FE5                  postinc0 000FEE           __end_of_Timer0 0058  
          __pidataCOMRAM 00D0      start_initialization 0058        __size_of_InitTMR0 0020  
               ??_Timer0 0000         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0017  
              __pintcode 0008                 _LATDbits 000F8C         __CFG_WDTPS$32768 000000  
             _ADCON1bits 000FC1                copy_data0 006C                 _InitTMR0 00B0  
               __Hrparam 0000                 __Lrparam 0000            __size_of_Init 0016  
          __size_of_main 002A                 int$flags 0019    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2                 intlevel2 0000  
